<Window 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"     
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
    mc:Ignorable="d"  
    x:Class="SearchAndGo.MainWindow"
    Title="Search And Go"
    WindowStyle="None"
    WindowStartupLocation="CenterScreen"
    Background="Silver"
    WindowState="Maximized"
    >
    <Window.Resources>
        <Style x:Key="SportCheckHomeButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                            		<VisualStateGroup.Transitions>
                            			<VisualTransition GeneratedDuration="0:0:0.5"/>
                            		</VisualStateGroup.Transitions>
                            		<VisualState x:Name="Normal"/>
                            		<VisualState x:Name="MouseOver">
                            			<Storyboard>
                            				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                            					<EasingDoubleKeyFrame KeyTime="0" Value="0.495"/>
                            				</DoubleAnimationUsingKeyFrames>
                            			</Storyboard>
                            		</VisualState>
                            		<VisualState x:Name="Pressed"/>
                            		<VisualState x:Name="Disabled"/>
                            	</VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image x:Name="image" Source="Resources\Images\SportCheckLogo.gif" Stretch="Fill" Cursor="Hand" ToolTip="Home"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Cursor="Hand" Content="">
                                <ContentPresenter.Effect>
                                    <BlurEffect/>
                                </ContentPresenter.Effect>
                            </ContentPresenter>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleGo" TargetType="{x:Type Button}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Grid>
        					<Rectangle Fill="#FF333333" RadiusY="0" RadiusX="0" Stroke="#FF333333" StrokeThickness="2"/>
        					<ContentPresenter HorizontalAlignment="Stretch" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="39.712,15.76,9.024,14.76" VerticalAlignment="Stretch" Height="Auto" Width="Auto"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsFocused" Value="True"/>
        					<Trigger Property="IsDefaulted" Value="True"/>
        					<Trigger Property="IsMouseOver" Value="True"/>
        					<Trigger Property="IsPressed" Value="True"/>
        					<Trigger Property="IsEnabled" Value="False"/>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
    	<Style x:Key="ComboBoxStyleMenu" TargetType="{x:Type ComboBox}">
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type ComboBox}">
    					<Grid>
    						<Rectangle Fill="#FF333333" RadiusY="8" RadiusX="8" Stroke="#FF333333" StrokeThickness="2"/>
    						<ScrollViewer Margin="0,0,26,0">
    							<ItemsPresenter/>
    						</ScrollViewer>
    					</Grid>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="ComboBoxFocusVisual">
    		<Setter Property="Control.Template">
    			<Setter.Value>
    				<ControlTemplate>
    					<Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
    		<GradientStop Color="#F3F3F3" Offset="0"/>
    		<GradientStop Color="#EBEBEB" Offset="0.5"/>
    		<GradientStop Color="#DDDDDD" Offset="0.5"/>
    		<GradientStop Color="#CDCDCD" Offset="1"/>
    	</LinearGradientBrush>
    	<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
    	<Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
    	<Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
    		<Setter Property="OverridesDefaultStyle" Value="true"/>
    		<Setter Property="IsTabStop" Value="false"/>
    		<Setter Property="Focusable" Value="false"/>
    		<Setter Property="ClickMode" Value="Press"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true" HorizontalAlignment="Stretch" IsHitTestVisible="True" OpacityMask="{x:Null}" BorderBrush="{x:Null}">
                            <Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Visibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Visible" IsHitTestVisible="False">
                                <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="White" HorizontalAlignment="Center" Margin="3,1,0,0" VerticalAlignment="Center"/>
                            </Grid>
                        </Microsoft_Windows_Themes:ButtonChrome>
                        <ControlTemplate.Triggers>
    						<Trigger Property="IsChecked" Value="true">
    							<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
    						</Trigger>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
    		<GradientStop Color="#ABADB3" Offset="0.05"/>
    		<GradientStop Color="#E2E3EA" Offset="0.07"/>
    		<GradientStop Color="#E3E9EF" Offset="1"/>
    	</LinearGradientBrush>
    	<Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
    		<Setter Property="OverridesDefaultStyle" Value="true"/>
    		<Setter Property="AllowDrop" Value="true"/>
    		<Setter Property="MinWidth" Value="0"/>
    		<Setter Property="MinHeight" Value="0"/>
    		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
    		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type TextBox}">
    					<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    		<Setter Property="OverridesDefaultStyle" Value="true"/>
    		<Setter Property="IsTabStop" Value="false"/>
    		<Setter Property="Focusable" Value="false"/>
    		<Setter Property="ClickMode" Value="Press"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type ToggleButton}">
    					<Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RoundCorners="false" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
    						<Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Center"/>
    					</Microsoft_Windows_Themes:ButtonChrome>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsChecked" Value="true">
    							<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
    						</Trigger>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
    		<Grid x:Name="Placement" SnapsToDevicePixels="true">
    			<Grid.ColumnDefinitions>
    				<ColumnDefinition Width="*"/>
    				<ColumnDefinition Width="Auto"/>
    			</Grid.ColumnDefinitions>
    			<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
    				<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}">
    					<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
    						<ScrollViewer x:Name="DropDownScrollViewer">
    							<Grid RenderOptions.ClearTypeHint="Enabled">
    								<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
    									<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
    								</Canvas>
    								<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    							</Grid>
    						</ScrollViewer>
    					</Border>
    				</Microsoft_Windows_Themes:SystemDropShadowChrome>
    			</Popup>
    			<Microsoft_Windows_Themes:ListBoxChrome x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"/>
    			<TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
    			<ToggleButton Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
    		</Grid>
    		<ControlTemplate.Triggers>
    			<Trigger Property="IsKeyboardFocusWithin" Value="true">
    				<Setter Property="Foreground" Value="Black"/>
    			</Trigger>
    			<Trigger Property="IsDropDownOpen" Value="true">
    				<Setter Property="RenderFocused" TargetName="Border" Value="true"/>
    			</Trigger>
    			<Trigger Property="HasItems" Value="false">
    				<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
    			</Trigger>
    			<Trigger Property="IsEnabled" Value="false">
    				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
    				<Setter Property="Background" Value="#FFF4F4F4"/>
    			</Trigger>
    			<Trigger Property="IsGrouping" Value="true">
    				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
    			</Trigger>
    			<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
    				<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
    				<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
    			</Trigger>
    			<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
    				<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
    				<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
    			</Trigger>
    		</ControlTemplate.Triggers>
    	</ControlTemplate>
    	<Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
    		<Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
    		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
    		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
    		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    		<Setter Property="Padding" Value="4,3"/>
    		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type ComboBox}">
    					<Grid x:Name="MainGrid" SnapsToDevicePixels="true">
    						<Grid.ColumnDefinitions>
    							<ColumnDefinition Width="*"/>
    							<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
    						</Grid.ColumnDefinitions>
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualState x:Name="Normal"/>
    								<VisualState x:Name="MouseOver"/>
    								<VisualState x:Name="Disabled"/>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Rectangle Fill="#FF333333" Margin="0,0,-17,0" RadiusY="0" RadiusX="0" Stroke="#FF333333" StrokeThickness="2" Grid.ColumnSpan="2"/>
    						<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="12.879,4.164,5.879,4.879" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
    							<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
    								<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="#FF333333">
    									<ScrollViewer x:Name="DropDownScrollViewer" Margin="12,0,0,0">
    										<Grid RenderOptions.ClearTypeHint="Enabled">
    											<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
    												<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="123" Canvas.Left="17"/>
    											</Canvas>
    											<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="-10,0,0,0" OpacityMask="#FF333333" HorizontalAlignment="Center" VerticalAlignment="Stretch" MinWidth="50"/>
    										</Grid>
    									</ScrollViewer>
    								</Border>
    							</Microsoft_Windows_Themes:SystemDropShadowChrome>
    						</Popup>
    						<ToggleButton Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxReadonlyToggleButton}" BorderThickness="0" Margin="12,3.286,5,4" Opacity="1"/>
    						<ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" IsHitTestVisible="false" Margin="10,10,0,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Height="33" Width="115" OpacityMask="#FFFFFDFD" Grid.ColumnSpan="2" HorizontalAlignment="Center"/>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
    							<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
    							<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
    						</Trigger>
    						<Trigger Property="HasItems" Value="false">
    							<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
    						</Trigger>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
    							<Setter Property="Background" Value="#FFF4F4F4"/>
    						</Trigger>
    						<Trigger Property="IsGrouping" Value="true">
    							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
    						</Trigger>
    						<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
    							<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
    							<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    		<Style.Triggers>
    			<Trigger Property="IsEditable" Value="true">
    				<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
    				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
    				<Setter Property="IsTabStop" Value="false"/>
    				<Setter Property="Padding" Value="3"/>
    				<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
    			</Trigger>
    		</Style.Triggers>
    	</Style>
    	<Style x:Key="ButtonFocusVisual">
    		<Setter Property="Control.Template">
    			<Setter.Value>
    				<ControlTemplate>
    					<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="ButtonStyleHelp" TargetType="{x:Type Button}">
    		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
    		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
    		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    		<Setter Property="HorizontalContentAlignment" Value="Center"/>
    		<Setter Property="VerticalContentAlignment" Value="Center"/>
    		<Setter Property="Padding" Value="1"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Button}">
    					<Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderDefaulted="{TemplateBinding IsDefaulted}" SnapsToDevicePixels="true" OpacityMask="#FF333333" BorderBrush="Black" Cursor="Hand" AllowDrop="True" Focusable="True" ToolTip="Ask a Representative">
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualStateGroup.Transitions>
    									<VisualTransition GeneratedDuration="0:0:0.5"/>
    								</VisualStateGroup.Transitions>
    								<VisualState x:Name="Normal"/>
    								<VisualState x:Name="MouseOver">
    									<Storyboard>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="Chrome">
    											<EasingColorKeyFrame KeyTime="0" Value="#FF333333"/>
    										</ColorAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Pressed"/>
    								<VisualState x:Name="Disabled"/>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    					</Microsoft_Windows_Themes:ButtonChrome>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsKeyboardFocused" Value="true">
    							<Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
    						</Trigger>
    						<Trigger Property="ToggleButton.IsChecked" Value="true">
    							<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
    						</Trigger>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Foreground" Value="#ADADAD"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="FrenchFlagButton" TargetType="{x:Type Button}">
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Button}">
    					<Grid x:Name="grid" OpacityMask="Black">
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualStateGroup.Transitions>
    									<VisualTransition GeneratedDuration="0:0:0.5"/>
    								</VisualStateGroup.Transitions>
    								<VisualState x:Name="Normal"/>
    								<VisualState x:Name="MouseOver">
    									<Storyboard>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
    											<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
    										</DoubleAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Pressed">
    									<Storyboard>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
    											<EasingDoubleKeyFrame KeyTime="0" Value="0.7"/>
    										</DoubleAnimationUsingKeyFrames>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.OpacityMask).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
    											<EasingColorKeyFrame KeyTime="0" Value="#FF333333"/>
    										</ColorAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Disabled"/>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Image x:Name="image">
    							<Image.OpacityMask>
    								<ImageBrush ImageSource="french_flag.jpeg"/>
    							</Image.OpacityMask>
    						</Image>
    						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="FR"/>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsFocused" Value="True"/>
    						<Trigger Property="IsDefaulted" Value="True"/>
    						<Trigger Property="IsMouseOver" Value="True"/>
    						<Trigger Property="IsPressed" Value="True"/>
    						<Trigger Property="IsEnabled" Value="False"/>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="FRFlag" TargetType="{x:Type Button}">
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Button}">
    					<Grid>
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualStateGroup.Transitions>
    									<VisualTransition GeneratedDuration="0:0:0.5"/>
    								</VisualStateGroup.Transitions>
    								<VisualState x:Name="Normal"/>
    								<VisualState x:Name="MouseOver">
    									<Storyboard>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
    											<EasingDoubleKeyFrame KeyTime="0" Value="0.495"/>
    										</DoubleAnimationUsingKeyFrames>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image1">
    											<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
    										</DoubleAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Pressed">
    									<Storyboard>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image1">
    											<EasingDoubleKeyFrame KeyTime="0" Value="0.695"/>
    										</DoubleAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Disabled"/>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Image Visibility="Hidden" x:Name="image" Source="Resources\Images\SportCheckLogo.gif" Stretch="Fill" Cursor="Hand" ToolTip="Home">
    							<Image.OpacityMask>
    								<ImageBrush ImageSource="Resources/Images/french_flag.jpeg"/>
    							</Image.OpacityMask>
    						</Image>
    						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Cursor="Hand" Content="FR" OpacityMask="{x:Null}">
    							<ContentPresenter.Effect>
    								<BlurEffect/>
    							</ContentPresenter.Effect>
    						</ContentPresenter>
    						<Image x:Name="image1" Source="french_flag.jpeg" Stretch="Fill"/>
    						<Label Content="FR" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="52.49,40.813,52.29,40.812" d:LayoutOverrides="Height"/>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsFocused" Value="True"/>
    						<Trigger Property="IsDefaulted" Value="True"/>
    						<Trigger Property="IsMouseOver" Value="True"/>
    						<Trigger Property="IsPressed" Value="True"/>
    						<Trigger Property="IsEnabled" Value="False"/>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<ControlTemplate x:Key="ButtonControlTemplate1" TargetType="{x:Type Button}">
    		<Grid>
    			<VisualStateManager.VisualStateGroups>
    				<VisualStateGroup x:Name="CommonStates">
    					<VisualStateGroup.Transitions>
    						<VisualTransition GeneratedDuration="0:0:0.5"/>
    					</VisualStateGroup.Transitions>
    					<VisualState x:Name="Normal"/>
    					<VisualState x:Name="MouseOver">
    						<Storyboard>
    							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
    								<EasingDoubleKeyFrame KeyTime="0" Value="0.495"/>
    							</DoubleAnimationUsingKeyFrames>
    						</Storyboard>
    					</VisualState>
    					<VisualState x:Name="Pressed">
    						<Storyboard>
    							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
    								<EasingDoubleKeyFrame KeyTime="0" Value="0.695"/>
    							</DoubleAnimationUsingKeyFrames>
    						</Storyboard>
    					</VisualState>
    					<VisualState x:Name="Disabled"/>
    				</VisualStateGroup>
    			</VisualStateManager.VisualStateGroups>
    			<Rectangle x:Name="rectangle" RadiusY="5" RadiusX="5" Stroke="#FF333333" StrokeThickness="2">
    				<Rectangle.Fill>
    					<ImageBrush ImageSource="help.jpg"/>
    				</Rectangle.Fill>
    			</Rectangle>
    		</Grid>
    	</ControlTemplate>
    	<ControlTemplate x:Key="ButtonControlTemplate2" TargetType="{x:Type Button}">
    		<Grid>
    			<VisualStateManager.VisualStateGroups>
    				<VisualStateGroup x:Name="CommonStates">
    					<VisualStateGroup.Transitions>
    						<VisualTransition GeneratedDuration="0:0:0.5"/>
    					</VisualStateGroup.Transitions>
    					<VisualState x:Name="Normal"/>
    					<VisualState x:Name="MouseOver">
    						<Storyboard>
    							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="rectangle">
    								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
    							</DoubleAnimationUsingKeyFrames>
    						</Storyboard>
    					</VisualState>
    					<VisualState x:Name="Pressed">
    						<Storyboard>
    							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="rectangle">
    								<EasingDoubleKeyFrame KeyTime="0" Value="0.7"/>
    							</DoubleAnimationUsingKeyFrames>
    						</Storyboard>
    					</VisualState>
    					<VisualState x:Name="Disabled"/>
    				</VisualStateGroup>
    			</VisualStateManager.VisualStateGroups>
    			<Rectangle x:Name="rectangle" RadiusY="5" RadiusX="5" Stroke="#FF333333" StrokeThickness="2">
    				<Rectangle.Fill>
    					<ImageBrush ImageSource="french_flag.jpeg"/>
    				</Rectangle.Fill>
    			</Rectangle>
    			<Label Content="FR" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="52,40,52.98,41.626" d:LayoutOverrides="Width, Height"/>
    		</Grid>
    	</ControlTemplate>
    </Window.Resources>
    
    <Grid Name="grid" ShowGridLines="False">
        <Grid.RowDefinitions>
            <!--Row 0: Logo + Language + HELP-->
        	<RowDefinition Height="Auto"/>
            <!--Row 1: Search Bar-->
        	<RowDefinition Height="Auto"/>
            <!--Row 2: Ad Banner-->
        	<RowDefinition Height="Auto"/>
            <!--Row 3: Categories-->
        	<RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <ComboBox HorizontalAlignment="Left" Width="140" Margin="8,8,0,0" Grid.Row="1" Style="{DynamicResource ComboBoxStyle1}" BorderBrush="#FF333333" Foreground="White" Background="#FF333333" FontSize="14" SelectedIndex="0">
        	<ComboBoxItem Content="All Departments"/>
        	<ComboBoxItem Content="Apparel"/>
            <ComboBoxItem Content="Equipment"/>
            <ComboBoxItem Content="Fitness"/>
        	<ComboBoxItem Content="Footwear"/>
            <ComboBoxItem Content="Hockey"/>
            <ComboBoxItem Content="Outerwear"/>
        </ComboBox>

        <Button x:Name="Search_Button" Content="Go" HorizontalAlignment="Right" Margin="0,8,8,0" Grid.Row="1" Style="{DynamicResource ButtonStyleGo}" Width="85" Cursor="Hand" FontSize="20" Foreground="White"/>

        <Button x:Name="Home_Button" Content="Button" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" Height="120" Margin="8,8,0,0" Style="{DynamicResource SportCheckHomeButton}" VerticalAlignment="Top" Width="140"/>
        <Button  x:Name="Help_Button" Content="" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Right" Height="120" Width="140" Margin="0,8,8,0" VerticalAlignment="Top" Cursor="Hand" Style="{DynamicResource HelpButton}" Template="{DynamicResource ButtonControlTemplate1}">
        	<Button.Background>
        		<ImageBrush ImageSource="help.jpg"/>
        	</Button.Background>
        </Button>
        <Button Style="{DynamicResource FRFlag}" x:Name="Language_Button" Content="FR" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Right" Height="120" Width="140" Margin="0,8,156,0" VerticalAlignment="Top" FontWeight="Bold" FontSize="21.333" Template="{DynamicResource ButtonControlTemplate2}">
        	<Button.Background>
        		<ImageBrush ImageSource="french_flag.jpeg"/>
        	</Button.Background>
        </Button>

        <Label Content="Browse items" FontSize="14" Visibility="Hidden" Foreground="Black" Grid.Row="3" Margin="8,8,8,0" />
        <ScrollViewer Grid.Row="3" x:Name="ScrollViewMain" Margin="8,40,8,0" Height="500" VerticalAlignment="Bottom" VerticalScrollBarVisibility="Auto">
            <WrapPanel x:Name="SearchResultsStackPanel" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top"> </WrapPanel>
        </ScrollViewer>
        <!--<TextBlock Name="searchBar"  TextWrapping="Wrap" Text="Search" VerticalAlignment="Bottom" Margin="146,8,73,0" Grid.Row="1" Height="60" ToolTip="Search" TabIndex="0" BorderThickness="2" FontSize="37.333" FontFamily="Arial" AcceptsReturn="True" BorderBrush="#FF333333" Foreground="#FF747272" TextAlignment="Justify" />-->
        <TextBox Name="searchBar"  TextWrapping="Wrap" Text="Search" VerticalAlignment="Bottom" Margin="146,8,73,0" Grid.Row="1" Height="60" ToolTip="Search" 
                 TabIndex="0" BorderThickness="2" FontSize="37.333" FontFamily="Arial" BorderBrush="#FF333333" Foreground="#FF747272" TextAlignment="Justify" 
                    KeyDown="MainSearchBar_KeyDown" Style="{DynamicResource SearchBar}" >
        	<TextBox.Resources>
        		<Style x:Key="SearchBar" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
        			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        			<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        			<Setter Property="BorderThickness" Value="1"/>
        			<Setter Property="Padding" Value="1"/>
        			<Setter Property="AllowDrop" Value="true"/>
        			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        			<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        			<Setter Property="Template">
        				<Setter.Value>
        					<ControlTemplate TargetType="{x:Type TextBox}">
        						<Microsoft_Windows_Themes:ListBoxChrome x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" SnapsToDevicePixels="true">
        							<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" MaxHeight="54" VerticalScrollBarVisibility="Disabled" VerticalAlignment="Center"/>
        						</Microsoft_Windows_Themes:ListBoxChrome>
        						<ControlTemplate.Triggers>
        							<Trigger Property="IsEnabled" Value="false">
        								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        							</Trigger>
        						</ControlTemplate.Triggers>
        					</ControlTemplate>
        				</Setter.Value>
        			</Setter>
        		</Style>
        	</TextBox.Resources>
        </TextBox>
    </Grid>
</Window>
